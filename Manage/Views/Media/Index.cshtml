@using Manage.Tools.FileHandler.Abstraction
@using Manage.ViewModels.Media
@using Core.Constants.File
@using Core.Constants
@using Core
@using System.Globalization

@model MediaIndexViewModel
@inject IFileService _fileService
@inject IUnitOfWork _unitOfWork

@{
    ViewData["Title"] = "Nobel Energy | Media";
    
    var currentCulture = CultureInfo.CurrentUICulture.TwoLetterISOLanguageName;
}

@await Component.InvokeAsync("IntroductionBanner", new { Page = Page.Media })


<!--------------------------- Tab --------------------------->
@await Component.InvokeAsync("PageTab", new { page = Page.Media, currentPage = "" })


<!--------------------------- Tab --------------------------->
<!--------------------------- News Section --------------------------->

<div id="media/news">
    <section class="news-section" id="news">
        <div class="g-container">
            <div class="g-flex">
                <a asp-route-culture="@currentCulture" asp-action="news" asp-controller="media" class="g-navigation__subtitle">
                    @await _unitOfWork.LanguageResources.GetByKeyAsync("NewsArchive", currentCulture)
                </a>
                <div class="g-navigation g-navigation__md">
                    <button class="g-btn g-navigation__prev" id="news-prev-md">
                        <img src="~/Client/assets/svgs/left-arrow.svg" asp-append-version="true" alt="Nobel Energy">
                    </button>
                    <button class="g-btn g-navigation__next" id="news-next-md">
                        <img src="~/Client/assets/svgs/right-arrow.svg" asp-append-version="true" alt="Nobel Energy">
                    </button>
                </div>
            </div>
            
            <p class="news-section__title g-title__md">
                @await _unitOfWork.LanguageResources.GetByKeyAsync("RecentNews", currentCulture)
            </p>

            <div class="news-section__wrapper">
                <div class="g-navigation g-navigation__sm">
                    <button class="g-btn g-navigation__prev" id="news-prev-md">
                        <img src="~/Client/assets/svgs/left-arrow.svg" asp-append-version="true" alt="Nobel Energy">
                    </button>
                    <button class="g-btn g-navigation__next" id="news-next-md">
                        <img src="~/Client/assets/svgs/right-arrow.svg" asp-append-version="true" alt="Nobel Energy">
                    </button>
                </div>
                <div class="news-section__swiper">
                    <div class="swiper-wrapper">
                        @foreach (var news in Model.News)
                        {
                            <div class="swiper-slide">
                                <div class="news-section__card">
                                    <div class="news-section__card--img">
                                        <img src="@_fileService.GetFileUrl(news.PhotoName, FilePath.News)" alt="">
                                    </div>
                                    <div class="news-section__card--body">
                                        <p class="news-section__card--title">
                                            @_unitOfWork.Languages.ChooseLanguage(news, "Title", currentCulture)
                                        </p>
                                        <div class="news-section__card--info">
                                            @Html.Raw(_unitOfWork.Languages.ChooseLanguage(news, "Description", currentCulture))
                                        </div>
                                        <div class="news-section__card--footer">
                                            <a asp-route-culture="@currentCulture" asp-controller="media" asp-action="newscomponent" asp-route-slug="@news.Slug" class="g-btn">
                                                @await _unitOfWork.LanguageResources.GetByKeyAsync("ReadMore", currentCulture)
                                            </a>
                                            <p class="news-section__card--date">@news.ActionDate.ToString("dd.MM.yyyy")</p>
                                        </div>
                                    </div>
                                    <div class="news-section__card--layer">
                                        <p class="layer-title">
                                            @_unitOfWork.Languages.ChooseLanguage(news, "Title", currentCulture)
                                        </p>
                                        <a asp-route-culture="@currentCulture" asp-controller="media" asp-action="newscomponent" asp-route-slug="@news.Slug" class="layer-btn g-btn">
                                            @await _unitOfWork.LanguageResources.GetByKeyAsync("ReadMore", currentCulture)
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<!--------------------------- News Section --------------------------->
<!--------------------------- Pages Components --------------------------->
<div id="g-pages-component-section">
    @foreach (var mediaComponent in Model.MediaComponents)
    {
        if (mediaComponent.isBanner)
        {
            <div id="media/@mediaComponent.Link" class="g-page-banner">
                <div class="g-page-banner-cover" style="background-image: url('@_fileService.GetFileUrl(mediaComponent.PhotoName, FilePath.Media)');">
                    <div class="g-page-banner-content">
                        <h2 class="g-page-banner-title">
                            @_unitOfWork.Languages.ChooseLanguage(mediaComponent, "Title", currentCulture)
                        </h2>
                        <div class="g-page-banner-text">
                            @Html.Raw(_unitOfWork.Languages.ChooseLanguage(mediaComponent, "Content", currentCulture))
                        </div>
                        <a href="/@currentCulture/media/@mediaComponent.Link" class="g-page-banner-anchor-button">
                            @await _unitOfWork.LanguageResources.GetByKeyAsync("ReadMore", currentCulture)
                        </a>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div id="media/@mediaComponent.Link" class="g-pages-component-element">
                <div class="g-pages-component-element-wrapper">
                    <div class="g-pages-component-element-content">
                        <h2 class="g-pages-component-element-content-title">
                            @_unitOfWork.Languages.ChooseLanguage(mediaComponent, "Title", currentCulture)
                        </h2>
                        <div class="g-pages-component-element-content-text">
                            @Html.Raw(_unitOfWork.Languages.ChooseLanguage(mediaComponent, "Content", currentCulture))
                        </div>
                        <a href="/@currentCulture/media/@mediaComponent.Link" class="g-pages-component-anchor-button">
                            @await _unitOfWork.LanguageResources.GetByKeyAsync("ReadMore", currentCulture)
                        </a>
                    </div>
                    <div class="g-pages-component-element-image">
                        <img src="@_fileService.GetFileUrl(mediaComponent.PhotoName, FilePath.Media)">
                    </div>
                </div>
            </div>
        }
    }
    @foreach (var flatpage in Model.Flatpages)
    {
        if (flatpage.IsBanner)
        {
            <div id="@flatpage.URL" class="g-page-banner">
                <div class="g-page-banner-cover" style='background: transparent url("@_fileService.GetFileUrl(flatpage.PagePhotoName, FilePath.Flatpage)")'>
                    <div class="g-page-banner-content">
                        <h3 class="g-page-banner-title">@Html.Raw(_unitOfWork.Languages.ChooseLanguage(flatpage, "TitlePage", currentCulture))</h3>
                        <div class="g-page-banner-text">@Html.Raw(_unitOfWork.Languages.ChooseLanguage(flatpage, "ContentPage", currentCulture))</div>
                        <a href="/@currentCulture/@flatpage.URL" class="g-page-banner-anchor-button">
                            @await _unitOfWork.LanguageResources.GetByKeyAsync("ReadMore", currentCulture)
                        </a>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div id="@flatpage.URL" class="g-pages-component-element">
                <div class="g-pages-component-element-wrapper">
                    <div class="g-pages-component-element-content">
                        <h2 class="g-pages-component-element-content-title">
                            @Html.Raw(_unitOfWork.Languages.ChooseLanguage(flatpage, "TitlePage", currentCulture))
                        </h2>
                        <div class="g-pages-component-element-content-text">
                            @Html.Raw(_unitOfWork.Languages.ChooseLanguage(flatpage, "ContentPage", currentCulture))
                        </div>
                        <a href="/@currentCulture/@flatpage.URL" class="g-pages-component-anchor-button">
                            @await _unitOfWork.LanguageResources.GetByKeyAsync("ReadMore", currentCulture)
                        </a>
                    </div>
                    <div class="g-pages-component-element-image">
                        <img src="@_fileService.GetFileUrl(flatpage.PagePhotoName, FilePath.Flatpage)" asp-append-version="true">
                    </div>
                </div>
            </div>
        }
    }
    @foreach (var dynamicPage in Model.DynamicPages)
    {
        if (dynamicPage.IsBanner)
        {
            <div id="@dynamicPage.URL" class="g-page-banner">
                <div class="g-page-banner-cover" style='background: transparent url("@_fileService.GetFileUrl(dynamicPage.PagePhotoName, FilePath.DynamicPage)")'>
                    <div class="g-page-banner-content">
                        <h3 class="g-page-banner-title">@Html.Raw(_unitOfWork.Languages.ChooseLanguage(dynamicPage, "TitlePage", currentCulture))</h3>
                        <div class="g-page-banner-text">@Html.Raw(_unitOfWork.Languages.ChooseLanguage(dynamicPage, "ContentPage", currentCulture))</div>
                        <a href="/@currentCulture/@dynamicPage.URL" class="g-page-banner-anchor-button">
                            @await _unitOfWork.LanguageResources.GetByKeyAsync("ReadMore", currentCulture)
                        </a>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div id="@dynamicPage.URL" class="g-pages-component-element">
                <div class="g-pages-component-element-wrapper">
                    <div class="g-pages-component-element-content">
                        <h2 class="g-pages-component-element-content-title">
                            @Html.Raw(_unitOfWork.Languages.ChooseLanguage(dynamicPage, "TitlePage", currentCulture))
                        </h2>
                        <div class="g-pages-component-element-content-text">
                            @Html.Raw(_unitOfWork.Languages.ChooseLanguage(dynamicPage, "ContentPage", currentCulture))
                        </div>
                        <a href="/@currentCulture/@dynamicPage.URL" class="g-pages-component-anchor-button">
                            @await _unitOfWork.LanguageResources.GetByKeyAsync("ReadMore", currentCulture)
                        </a>
                    </div>
                    <div class="g-pages-component-element-image">
                        <img src="@_fileService.GetFileUrl(dynamicPage.PagePhotoName, FilePath.DynamicPage)" asp-append-version="true">
                    </div>
                </div>
            </div>
        }
    }
</div>

<!--------------------------- Pages Components --------------------------->
@section Scripts{
    <script src="~/Client/js/newsCarousel.js"></script>
    <script src="~/Client/js/newsTruncate.js"></script>
} 